{
  "name": "backbone-react-component",
  "version": "0.10.0",
  "filename": "backbone-react-component.js",
  "description": "Backbone.React.Component is a wrapper for React.Component and brings all the power of Facebook's React to Backbone.js",
  "author": {
    "name": "José Magalhães",
    "email": "magalhas@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/magalhas/backbone-react-component.git"
  },
  "peerDependencies": {
    "backbone": "^1.2.3",
    "react": "^0.14.0"
  },
  "dependencies": {
    "underscore": "^1.8.3"
  },
  "devDependencies": {
    "backbone": "^1.2.3",
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-copy": "^0.8.1",
    "grunt-contrib-jasmine": "^0.9.1",
    "grunt-contrib-uglify": "^0.9.2",
    "grunt-docco": "^0.4.0",
    "grunt-gh-pages": "^0.10.0",
    "jquery": "^2.1.4",
    "react": "^0.14.0",
    "react-dom": "^0.14.0"
  },
  "scripts": {
    "test": "grunt test",
    "prepublish": "grunt build && grunt doc"
  },
  "keywords": [
    "backbone",
    "react",
    "data binding",
    "models",
    "collections",
    "server",
    "client",
    "react-component"
  ],
  "main": "lib/component",
  "engines": {
    "node": ">=0.10"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/magalhas/backbone-react-component/blob/master/LICENSE-MIT"
    }
  ],
  "readme": "# [Backbone.React.Component](http://magalhas.github.io/backbone-react-component/) [![Build Status](https://travis-ci.org/magalhas/backbone-react-component.png)](https://travis-ci.org/magalhas/backbone-react-component)\n\n`Backbone.React.Component` is a mixin and API that glues [Backbone](http://backbonejs.org/) models and collections into [React](http://facebook.github.io/react/) components.\n\nWhen used as a mixin the component is mounted, a wrapper starts listening to models and collections changes to automatically set your component state and achieve UI binding through reactive updates.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*\n\n- [Dependencies](#dependencies)\n- [How To](#how-to)\n  - [API Usage](#api-usage)\n  - [Mixin Usage](#mixin-usage)\n    - [One model](#one-model)\n    - [One collection](#one-collection)\n    - [Multiple models and collections](#multiple-models-and-collections)\n  - [Usage on the server (Node.js)](#usage-on-the-server-nodejs)\n  - [API](#api)\n    - [on(component, modelsAndCollectionsObject)](#oncomponent-modelsandcollectionsobject)\n    - [onModel(component, modelsObject)](#onmodelcomponent-modelsobject)\n    - [onCollection(component, collectionsObject](#oncollectioncomponent-collectionsobject)\n    - [off(component)](#offcomponent)\n  - [Mixin API](#mixin-api)\n    - [$](#)\n    - [getCollection()](#getcollection)\n    - [getModel()](#getmodel)\n    - [overrideModel()](#overridemodel)\n    - [overrideCollection()](#overridecollection)\n- [Examples](#examples)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Dependencies\n* [Backbone](http://backbonejs.org/) ([Underscore](http://underscorejs.org/))\n* [React](http://facebook.github.io/react/)\n\n## How To\nUsing [Bower](http://bower.io/)\n```\nbower install backbone-react-component\n```\n\nUsing [Npm](https://npmjs.org/)\n```\nnpm install backbone-react-component\n```\nIf you're not using [Bower](http://bower.io/) nor [Npm](https://npmjs.org/) download the source from the dist folder or use [CDNJS](http://cdnjs.com/).\n\n### API Usage\n\n```js\nimport Backbone from 'backbone';\nimport backboneReact from 'backbone-react-component';\nimport React from 'react';\n\nvar collection1 = new Backbone.Collection([\n  {hello: 1},\n  {hello: 2}\n]);\n\nexport default class Component extends React.Component {\n  componentWillMount () {\n    backboneReact.on(this, {\n      collections: {\n        myCollection: collection1\n      }\n    });\n  }\n\n  componentWillUnmount () {\n    backboneReact.off(this);\n  }\n\n  render () {\n    return (\n      <div>\n        {this.state.myCollection.map((model) => model.hello)}\n      </div>\n    );\n  }\n}\n```\n\n### Mixin Usage\n\n#### One model\n```js\nvar MyComponent = React.createClass({\n  mixins: [Backbone.React.Component.mixin],\n  render: function () {\n    return <div>{this.state.model.foo}</div>;\n  }\n});\n\nvar model = new Backbone.Model({foo: 'bar'});\n\nReactDOM.render(<MyComponent model={model} />, document.body);\n// Update the UI\nmodel.set('foo', 'Hello world!');\n```\n`MyComponent` will listen to any model changes, making the UI refresh.\n\n#### One collection\n```js\nvar MyComponent = React.createClass({\n  mixins: [Backbone.React.Component.mixin],\n  createEntry: function (entry) {\n    return <div key={entry.id}>{entry.helloWorld}</div>;\n  },\n  render: function () {\n    return <div>{this.state.collection.map(this.createEntry)}</div>;\n  }\n});\nvar collection = new Backbone.Collection([\n  {id: 0, helloWorld: 'Hello world!'},\n  {id: 1, helloWorld: 'Hello world!'}\n]);\n\nReactDOM.render(<MyComponent collection={collection} />, document.body);\n```\n\n#### Multiple models and collections\n```js\nvar MyComponent = React.createClass({\n  mixins: [Backbone.React.Component.mixin],\n  createEntry: function (entry) {\n    return <div>{entry.helloWorld}</div>;\n  },\n  render: function () {\n    return (\n      <div>\n        {this.state.firstModel.helloWorld}\n        {this.state.secondModel.helloWorld}\n        {this.state.firstCollection.map(this.createEntry)}\n        {this.state.secondCollection.map(this.createEntry)}\n      </div>\n    );\n  }\n});\n\nvar MyFactory = React.createFactory(MyComponent);\n\nvar newComponent = MyFactory({\n  model: {\n    firstModel: new Backbone.Model({helloWorld: 'Hello world!'}),\n    secondModel: new Backbone.Model({helloWorld: 'Hello world!'})\n  },\n  collection: {\n    firstCollection: new Backbone.Collection([{helloWorld: 'Hello world!'}]),\n    secondCollection: new Backbone.Collection([{helloWorld: 'Hello world!'}])\n  }\n});\nReactDOM.render(newComponent, document.body);\n```\n\n### Usage on the server (Node.js)\n```js\nvar Backbone = require('backbone');\nvar backboneMixin = require('backbone-react-component');\nvar React = require('react');\n\nvar model = new Backbone.Model({\n  helloWorld: 'Hello world!'\n});\nvar HelloWorld = React.createClass({\n  mixins: [backboneMixin],\n  render: function () {\n    return React.DOM.div({}, this.state.model.helloWorld);\n  }\n});\nvar HelloWorldFactory = React.createFactory(HelloWorld);\n\n// Render to an HTML string\nReactDOM.renderToString(HelloWorldFactory({model: model}));\n// Updating the model\nmodel.set('helloWorld', 'Hi again!');\n// Rendering to an HTML string again\nReactDOM.renderToString(HelloWorldFactory({model: model}));\n```\n\n### API\n\n#### on(component, modelsAndCollectionsObject)\nBinds all models/collections found inside `modelsAndCollectionsObject` to\n`component`. `modelsAndCollectionsObject` takes the following form:\n\n```js\n{\n  models: {\n    a: new Backbone.Model() // binds to `@state.a`\n  },\n  collections: {\n    b: new Backbone.Collection() // binds to `@state.b`\n  }\n}\n```\n\n#### onModel(component, modelsObject)\nShortcut method to `#on`. `modelsObject` can either be an object of\n`Backbone.Model`s or a single instance of one.\n\n#### onCollection(component, collectionsObject\nShortcut method to `#on`. `collectionsObject` can either be an object of\n`Backbone.Collection`s or a single instance of one.\n\n#### off(component)\nTeardown method. Unbinds all models and collections from `component`.\n\n### Mixin API\nThe following API is under `Backbone.React.Component.mixin` (`require('backbone-react-component')`):\n\n#### $\nInspired by Backbone.View, it's a shortcut to this.$el.find method if `jQuery`\nis present, else it fallbacks to native DOM `querySelector`.\n\n#### getCollection()\nGrabs the component's collection(s) or from one of the parents.\n\n#### getModel()\nGrabs the component's model(s) or from one of the parents.\n\n#### overrideModel()\nHook that can be implemented to return a model or multiple models. This hook is\nexecuted when the component is initialized. It's useful on cases such as when\n`react-router` is being used.\n\n#### overrideCollection()\nHook that can be implemented to return a collection or multiple collections.\nThis hook is executed when the component is initialized. It's useful on cases\nsuch as when `react-router` is being used.\n\n\n## Examples\n* [Blog](https://github.com/magalhas/backbone-react-component/tree/master/examples/blog)\n* [Nested](https://github.com/magalhas/backbone-react-component/tree/master/examples/nested)\n* [Typewriter](https://rawgithub.com/magalhas/backbone-react-component/master/examples/typewriter/index.html)\n* [Screencast](https://www.youtube.com/watch?v=iul1fWHVU6A)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/magalhas/backbone-react-component/issues"
  },
  "_id": "backbone-react-component@0.10.0",
  "_from": "backbone-react-component@~0.10.0"
}
